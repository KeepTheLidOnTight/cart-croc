{"ast":null,"code":"import _slicedToArray from \"/Users/josh/hw/cart-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/josh/hw/cart-croc/client/src/components/SearchBar/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport \"./style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // https://fontawesome.com/how-to-use/on-the-web/using-with/react\n\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"react-modal\";\nimport ModalCart from \"../ModalCart\"; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nModal.setAppElement(\"#root\");\n\nfunction SearchBar() {\n  _s();\n\n  var _useStoreContext = useStoreContext(),\n      _useStoreContext2 = _slicedToArray(_useStoreContext, 1),\n      store = _useStoreContext2[0];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalIsOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {// references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  var loggedIn = localStorage.getItem(\"jwtToken\");\n\n  if (loggedIn) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"searchBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"searchPrompt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Find what you're looking for: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"product search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 69\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      id: \"cartBtn\",\n      onClick: openModal,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faShoppingCart,\n      id: \"cart icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    })), store.loading ? /*#__PURE__*/React.createElement(\"a\", {\n      className: \"navbar-brand ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }\n    }, \"loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalIsOpen,\n      onAfterOpen: afterOpenModal,\n      onRequestClose: closeModal,\n      contentLabel: \"cart modal \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalCart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return null;\n  }\n}\n\n_s(SearchBar, \"liJSDEt+EFxip/1PyL3yYamne+c=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/josh/hw/cart-croc/client/src/components/SearchBar/index.js"],"names":["React","useStoreContext","FontAwesomeIcon","faShoppingCart","Modal","ModalCart","setAppElement","SearchBar","store","useState","modalIsOpen","setIsOpen","openModal","afterOpenModal","closeModal","loggedIn","localStorage","getItem","loading"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC,C,CACA;;AACA,SAASC,cAAT,QAA+B,mCAA/B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAEA;;AACAD,KAAK,CAACE,aAAN,CAAoB,OAApB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA,yBACHN,eAAe,EADZ;AAAA;AAAA,MACZO,KADY;;AAAA,wBAEcR,KAAK,CAACS,QAAN,CAAe,KAAf,CAFd;AAAA;AAAA,MAEZC,WAFY;AAAA,MAECC,SAFD;;AAGnB,WAASC,SAAT,GAAqB;AACnBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASE,cAAT,GAA0B,CACxB;AACD;;AAED,WAASC,UAAT,GAAsB;AACpBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,MAAMI,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;;AACA,MAAIF,QAAJ,EAAc;AACZ,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAG,MAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADN,oBAC8D;AAAO,MAAA,IAAI,EAAC,MAAZ;AACxD,MAAA,WAAW,EAAC,gBAD4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9D,oBAE4C;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAEH,SAA9B;AACtC,MAAA,SAAS,EAAC,iBAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEvC,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAET,cAAvB;AAAuC,MAAA,EAAE,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFuC,CAF5C,EAKOK,KAAK,CAACU,OAAN,gBAAgB;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhB,gBAAqE,yCAL5E,eAMM,oBAAC,KAAD;AAEF,MAAA,MAAM,EAAER,WAFN;AAGF,MAAA,WAAW,EAAEG,cAHX;AAIF,MAAA,cAAc,EAAEC,UAJd;AAKF,MAAA,YAAY,EAAC,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQF,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARE,CANN,CADF;AAmBD,GApBD,MAoBO;AACL,WAAO,IAAP;AACD;AACF;;GAvCQP,S;UACSN,e;;;KADTM,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport \"./style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// https://fontawesome.com/how-to-use/on-the-web/using-with/react\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Modal from \"react-modal\";\nimport ModalCart from \"../ModalCart\";\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement(\"#root\");\n\nfunction SearchBar() {\n  const [store] = useStoreContext();\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const loggedIn = localStorage.getItem(\"jwtToken\");\n  if (loggedIn) {\n    return (\n      <div id=\"searchBar\">\n            <p id=\"searchPrompt\">Find what you're looking for: </p> <input type=\"text\"\n            placeholder=\"product search\"></input> <button id=\"cartBtn\" onClick={openModal}\n            className=\"btn btn-primary\"\n          ><FontAwesomeIcon icon={faShoppingCart} id=\"cart icon\"/></button>\n            {store.loading ? <a className=\"navbar-brand ml-auto\">loading...</a> : <></>}\n            <Modal\n\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          contentLabel=\"cart modal \"\n        >\n          \n          <ModalCart></ModalCart>\n        </Modal>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}