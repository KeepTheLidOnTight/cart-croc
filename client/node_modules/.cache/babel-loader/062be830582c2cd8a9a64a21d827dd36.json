{"ast":null,"code":"import _slicedToArray from \"/Users/josh/hw/cart-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/josh/hw/cart-croc/client/src/components/ModalCart/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from 'react-modal';\nimport \"./style.css\";\nimport CartItem from '../CartItem';\nimport Texture from '../Images/45-degree-fabric-light.png';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nvar modalStyle = {\n  backgroundImage: \"url(\".concat(Texture, \")\"),\n  padding: \"15px\"\n};\nModal.setAppElement(\"#root\");\n\nfunction ModalCart() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalIsOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {// references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    contentLabel: \"cart modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modalCart\",\n    style: modalStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"closeCart\",\n    className: \"btn btn-danger\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faWindowClose,\n    id: \"close window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(CartItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"totalInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Subtotal: \"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"totalInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Sales tax: \"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"totalInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Total: \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Check out\"))));\n}\n\n_s(ModalCart, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c = ModalCart;\nexport default ModalCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCart\");","map":{"version":3,"sources":["/Users/josh/hw/cart-croc/client/src/components/ModalCart/index.js"],"names":["React","useState","useEffect","Modal","CartItem","Texture","FontAwesomeIcon","faWindowClose","modalStyle","backgroundImage","padding","setAppElement","ModalCart","modalIsOpen","setIsOpen","openModal","afterOpenModal","closeModal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,eAAe,gBAASJ,OAAT,MADA;AAEfK,EAAAA,OAAO,EAAE;AAFM,CAAnB;AAIAP,KAAK,CAACQ,aAAN,CAAoB,OAApB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA,wBACcZ,KAAK,CAACC,QAAN,CAAe,KAAf,CADd;AAAA;AAAA,MACZY,WADY;AAAA,MACCC,SADD;;AAEnB,WAASC,SAAT,GAAqB;AACnBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,WAASE,cAAT,GAA0B,CACxB;AACD;;AACD,WAASC,UAAT,GAAsB;AACpBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACD,sBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAED,WADV;AAEE,IAAA,WAAW,EAAEG,cAFf;AAGE,IAAA,cAAc,EAAEC,UAHlB;AAIE,IAAA,YAAY,EAAC,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,KAAK,EAAET,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAuB,IAAA,SAAS,EAAC,gBAAjC;AAAkD,IAAA,OAAO,EAAES,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,aAAvB;AAAsC,IAAA,EAAE,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eAQE;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,eASE;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CATF,CANF,CADF;AAsBD;;GAjCQK,S;;KAAAA,S;AAmCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from 'react-modal';\nimport \"./style.css\";\nimport CartItem from '../CartItem';\nimport Texture from '../Images/45-degree-fabric-light.png';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\n\nconst modalStyle = {\n    backgroundImage: `url(${Texture})`,\n    padding: \"15px\"\n};\nModal.setAppElement(\"#root\");\n\nfunction ModalCart() {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      contentLabel=\"cart modal\"\n    >\n      <div id=\"modalCart\" style={modalStyle}>\n        <button id=\"closeCart\" className=\"btn btn-danger\" onClick={closeModal}>\n          <FontAwesomeIcon icon={faWindowClose} id=\"close window\" />\n        </button>\n        <CartItem />\n        <hr />\n        <p class=\"totalInfo\">Subtotal: </p>\n        <p class=\"totalInfo\">Sales tax: </p>\n        <p class=\"totalInfo\">Total: </p>\n        <a href=\"/checkout\">\n          <button className=\"btn btn-primary\">Check out</button>\n        </a>\n      </div>\n    </Modal>\n  );\n}\n\nexport default ModalCart;"]},"metadata":{},"sourceType":"module"}