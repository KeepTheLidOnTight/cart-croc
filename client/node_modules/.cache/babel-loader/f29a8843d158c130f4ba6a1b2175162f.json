{"ast":null,"code":"export default {\n  // ======================================================================================================================\n  // TODO: Have a good one bro\n  // ======================================================================================================================\n  // REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: \n  // ======================================================================================================================\n  // REMINDER: : REMEMBER THAT HEROKU CAN\"T USE LOCALHOST BRUH\n  // which is why the fetch uses just \"/\" routing instead of localhost:3000/\n  // ======================================================================================================================\n  getAllUsers: function getAllUsers() {\n    return fetch(\"/users\").then(function (res) {\n      return res.json();\n    });\n  },\n  saveUser: function saveUser(user) {\n    fetch(\"/saveUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n  },\n  saveItem: function saveItem(user) {\n    fetch(\"/saveItem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n  },\n  updateItem: function updateItem(itemData, id) {\n    fetch(\"/updateItem/\".concat(id), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(itemData)\n    }).then(function (res) {\n      return res.json();\n    });\n  },\n  getAllItems: function getAllItems() {\n    return fetch(\"/inventory\").then(function (res) {\n      return res.json();\n    });\n  },\n  getItem: function getItem(id) {\n    return fetch(\"/edit/\".concat(id)).then(function (res) {\n      return res.json();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  //===================================================================\n  // Cart API routes\n  getCartItem: function getCartItem(id) {\n    return fetch(\"/cartEdit/\".concat(id)).then(function (res) {\n      return res.json();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  saveCartItem: function saveCartItem(user) {\n    console.log(user);\n    fetch(\"/saveCartItem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n  },\n  updateCartItemSellQuantity: function updateCartItemSellQuantity(itemData, id) {\n    fetch(\"/updateCartItem/\".concat(id), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(itemData)\n    }).then(function (res) {\n      return res.json();\n    });\n  },\n  getAllCartItems: function getAllCartItems() {\n    return fetch(\"/cart\").then(function (res) {\n      return res.json();\n    });\n  },\n  deleteCartItem: function deleteCartItem(id) {\n    fetch('/deleteCartItem/' + id, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.text();\n    }) // or res.json()\n    .then(function (res) {\n      return console.log(res);\n    });\n  }\n}; //===================================================================\n// Order History API routes","map":{"version":3,"sources":["/Users/ericosowski/Desktop/Temp_Stuff/BackupProj3/checkout-croc/client/src/utils/API.js"],"names":["getAllUsers","fetch","then","res","json","saveUser","user","method","headers","body","JSON","stringify","saveItem","updateItem","itemData","id","getAllItems","getItem","catch","error","console","log","getCartItem","saveCartItem","updateCartItemSellQuantity","getAllCartItems","deleteCartItem","text"],"mappings":"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","sourcesContent":["export default {\n  // ======================================================================================================================\n  // TODO: Have a good one bro\n  // ======================================================================================================================\n\n\n  // REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: REMINDER: \n  // ======================================================================================================================\n  // REMINDER: : REMEMBER THAT HEROKU CAN\"T USE LOCALHOST BRUH\n  // which is why the fetch uses just \"/\" routing instead of localhost:3000/\n  // ======================================================================================================================\n\n  getAllUsers: function () {\n    return fetch(\"/users\").then(res => res.json())\n  },\n\n  saveUser: function (user) {\n    fetch(\"/saveUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user)\n    })\n  },\n\n  saveItem: function (user) {\n    fetch(\"/saveItem\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user)\n    })\n  },\n\n  updateItem: function (itemData, id) {\n    fetch(`/updateItem/${id}`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(itemData)\n    }).then(res => res.json());\n  },\n\n  getAllItems: function () {\n    return fetch(\"/inventory\").then(res => res.json())\n  },\n\n  getItem: function (id) {\n    return fetch(`/edit/${id}`).then(res => res.json()\n    ).catch((error) => {\n      console.log(error);\n    })\n  },\n\n  //===================================================================\n  // Cart API routes\n\n  getCartItem: function (id) {\n    return fetch(`/cartEdit/${id}`).then(res => res.json()\n    ).catch((error) => {\n      console.log(error);\n    })\n  },\n\n  saveCartItem: function (user) {\n    console.log(user);\n    fetch(\"/saveCartItem\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user)\n    })\n  },\n\n  updateCartItemSellQuantity: function (itemData, id) {\n    fetch(`/updateCartItem/${id}`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(itemData)\n    }).then(res => res.json());\n  },\n\n  getAllCartItems: function () {\n    return fetch(\"/cart\").then(res => res.json())\n  },\n\n  deleteCartItem: function (id) {\n    fetch('/deleteCartItem/' + id, {\n      method: 'DELETE',\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n    .then(res => res.text()) // or res.json()\n    .then(res => console.log(res))\n  },\n};\n\n  //===================================================================\n  // Order History API routes"]},"metadata":{},"sourceType":"module"}