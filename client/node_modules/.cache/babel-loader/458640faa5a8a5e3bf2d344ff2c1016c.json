{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericosowski/Desktop/PROJECT3/checkout-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ericosowski/Desktop/PROJECT3/checkout-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ericosowski/Desktop/PROJECT3/checkout-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ericosowski/Desktop/PROJECT3/checkout-croc/client/src/pages/TestShitOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport \"../utils/API\";\nimport API from \"../utils/API\";\n\nfunction Testing() {\n  _s();\n\n  var _this = this;\n\n  var newUsername = document.querySelector(\"#username-input\");\n  var newPassword = document.querySelector(\"#password-input\");\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userList = _useState2[0],\n      setUserList = _useState2[1];\n\n  useEffect(function () {\n    var getUsers = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var users;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.getAllUsers();\n\n              case 2:\n                users = _context.sent;\n                setUserList(users);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getUsers() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getUsers();\n  }, []); // When the form is submitted, we validate there's an email and password entered\n\n  function doThisThing(event) {\n    event.preventDefault();\n    var userData = {\n      userName: newUsername,\n      password: newPassword\n    };\n    API.saveUser(userData.email, userData.password); // newUsername.val(\"\");\n    // newPassword.val(\"\");\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"login\",\n    onSubmit: doThisThing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"username-input\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password-input\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default  green darken-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"tableWrapper\",\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"tableHeader\",\n    className: \"bg-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, userList === null || userList === void 0 ? void 0 : userList.map(function (result, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }, result.userName));\n  }))))));\n}\n\n_s(Testing, \"XZtmH22gSBQm+njpQReo0puLaas=\");\n\n_c = Testing;\n;\nexport default Testing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"sources":["/Users/ericosowski/Desktop/PROJECT3/checkout-croc/client/src/pages/TestShitOut.js"],"names":["React","useState","useEffect","Col","Row","Container","API","Testing","newUsername","document","querySelector","newPassword","userList","setUserList","getUsers","getAllUsers","users","doThisThing","event","preventDefault","userData","userName","password","saveUser","email","map","result","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport \"../utils/API\"\nimport API from \"../utils/API\";\n\n\n\nfunction Testing() {\n    let newUsername = document.querySelector(\"#username-input\");\n    let newPassword = document.querySelector(\"#password-input\");\n\n\n    const [userList, setUserList] = useState([]);\n\n\n    useEffect(() => {\n        const getUsers = async () => {\n            const users = await API.getAllUsers()\n            setUserList(users)\n        }\n        getUsers();\n    }, [])\n\n    // When the form is submitted, we validate there's an email and password entered\n    function doThisThing (event) {\n        event.preventDefault();\n        var userData = {\n            userName: newUsername,\n            password: newPassword\n        }\n        API.saveUser(userData.email, userData.password);\n        // newUsername.val(\"\");\n        // newPassword.val(\"\");\n    }\n\n    return (\n        <Container fluid>\n            <form className=\"login\" onSubmit={doThisThing}>\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" id=\"username-input\" placeholder=\"Username\" />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"password\" className=\"form-control\" id=\"password-input\" placeholder=\"Password\" />\n                </div>\n                <button type=\"submit\" className=\"btn btn-default  green darken-3\">Login</button>\n            </form>\n\n            {/* <button onClick={API.getAllUsers}>Get Users</button> */}\n            <div className=\"container\">\n                <div id=\"tableWrapper\" className=\"row\">\n                    <table className=\"table table-striped table-hover\">\n                        <thead>\n                            <tr id=\"tableHeader\" className=\"bg-warning\">\n                                <th scope=\"col\">\n                                    Name\n                    </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {userList?.map((result, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>\n                                            {result.userName}\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Testing;\n"]},"metadata":{},"sourceType":"module"}