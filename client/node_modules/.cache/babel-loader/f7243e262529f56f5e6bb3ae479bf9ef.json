{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericosowski/Desktop/Temp_Stuff/BackupProj3/checkout-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ericosowski/Desktop/Temp_Stuff/BackupProj3/checkout-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ericosowski/Desktop/Temp_Stuff/BackupProj3/checkout-croc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ericosowski/Desktop/Temp_Stuff/BackupProj3/checkout-croc/client/src/pages/TestCartShitOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Link } from 'react-router-dom';\nimport API from \"../utils/API\";\n\nfunction Cart() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cartList = _useState2[0],\n      setCart = _useState2[1];\n\n  useEffect(function () {\n    var getCart = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var cartItems;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.getAllCartItems();\n\n              case 2:\n                cartItems = _context.sent;\n                setCart(cartItems);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getCart() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCart();\n  }, []);\n\n  var deleteCartItem = function deleteCartItem(itemId) {\n    return function (event) {\n      event.preventDefault();\n      API.deleteCartItem(itemId);\n    };\n  };\n\n  var handleQuantityChangeAndThenUpdateSellQuantity = function handleQuantityChangeAndThenUpdateSellQuantity(itemId) {\n    return function (event) {\n      event.preventDefault();\n      var sellQuantity = event.target.value;\n      var newSellQuantity = {\n        sellQuantity: sellQuantity\n      };\n      console.log(\"sell quantity is \", sellQuantity);\n      API.updateCartItemSellQuantity(newSellQuantity, itemId);\n    };\n  };\n\n  var submitOrder = function submitOrder() {\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var cartItems;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return API.getAllCartItems();\n\n              case 3:\n                cartItems = _context2.sent;\n                API.saveOrderHistory(cartItems);\n                cartItems.forEach(function (cartItem) {\n                  API.getItemByName(cartItem.itemName).then(function (tempInventoryItem) {\n                    var id = tempInventoryItem._id;\n                    var newInventoryQuantity = tempInventoryItem.quantity - cartItem.sellQuantity;\n                    var newInventoryObj = {\n                      quantity: newInventoryQuantity\n                    };\n                    API.updateItem(newInventoryObj, id);\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"tableWrapper\",\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"tableHeader\",\n    className: \"bg-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, \"Item name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Price of the thing\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \"How many IS YOU want bruh\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"description\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, cartList === null || cartList === void 0 ? void 0 : cartList.map(function (result) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: result._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, result.itemName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, result.price), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleQuantityChangeAndThenUpdateSellQuantity(result._id),\n      type: \"number\",\n      placeholder: result.sellQuantity,\n      id: \"quantity\",\n      name: \"quantity\",\n      min: 1,\n      max: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, result.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: deleteCartItem(result._id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 45\n      }\n    }, \"Del-tete-this\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: submitOrder(result),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }, \"GIMME MY SHIT\")));\n  }))))));\n}\n\n_s(Cart, \"QuTSPQK24UXkL+z66EeJvj3ya4A=\");\n\n_c = Cart;\n;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/ericosowski/Desktop/Temp_Stuff/BackupProj3/checkout-croc/client/src/pages/TestCartShitOut.js"],"names":["React","useState","useEffect","Col","Row","Container","Link","API","Cart","cartList","setCart","getCart","getAllCartItems","cartItems","deleteCartItem","itemId","event","preventDefault","handleQuantityChangeAndThenUpdateSellQuantity","sellQuantity","target","value","newSellQuantity","console","log","updateCartItemSellQuantity","submitOrder","saveOrderHistory","forEach","cartItem","getItemByName","itemName","then","tempInventoryItem","id","_id","newInventoryQuantity","quantity","newInventoryObj","updateItem","map","result","price","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Link } from 'react-router-dom';\nimport API from \"../utils/API\";\n\nfunction Cart() {\n    const [cartList, setCart] = useState([]);\n\n    useEffect(() => {\n        const getCart = async () => {\n            let cartItems = await API.getAllCartItems()\n            setCart(cartItems)\n        }\n        getCart();\n    }, [])\n\n    const deleteCartItem = itemId => {\n        return event => {\n            event.preventDefault();\n            API.deleteCartItem(itemId);\n        }\n    };\n\n    const handleQuantityChangeAndThenUpdateSellQuantity = itemId => {\n        return event => {\n            event.preventDefault();\n            const sellQuantity = event.target.value;\n            let newSellQuantity = {\n                sellQuantity: sellQuantity\n            }\n            console.log(\"sell quantity is \", sellQuantity)\n            API.updateCartItemSellQuantity(newSellQuantity, itemId)\n\n        }\n    };\n\n    const submitOrder = () => {\n        return async (event) => {\n            event.preventDefault();\n            let cartItems = await API.getAllCartItems()\n            API.saveOrderHistory(cartItems);\n\n            cartItems.forEach(cartItem => {\n                API.getItemByName(cartItem.itemName)\n                .then(tempInventoryItem => {\n                    let id = tempInventoryItem._id\n                    let newInventoryQuantity = (tempInventoryItem.quantity - cartItem.sellQuantity) \n                    let newInventoryObj = {quantity : newInventoryQuantity}\n\n                    API.updateItem(newInventoryObj, id);\n                 });\n            });\n        }\n    };\n\n    return (\n        <Container fluid>\n            <div className=\"container\">\n                <div id=\"tableWrapper\" className=\"row\">\n                    <table className=\"table table-striped table-hover\">\n                        <thead>\n                            <tr id=\"tableHeader\" className=\"bg-warning\">\n                                <th scope=\"col\">\n                                    Item name\n                    </th>\n                                <th scope=\"col\">\n                                    Price of the thing\n                    </th>\n                                <th scope=\"col\">\n                                    How many IS YOU want bruh\n                    </th>\n                                <th scope=\"col\">\n                                    description\n                    </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cartList?.map((result) => {\n                                return (\n                                    <tr key={result._id}>\n                                        <td>\n                                            {result.itemName}\n                                        </td>\n                                        <td>\n                                            {result.price}\n                                        </td>\n                                        <td>\n                                            <form>\n                                                <input onChange={handleQuantityChangeAndThenUpdateSellQuantity(result._id)} type=\"number\" placeholder={result.sellQuantity} id=\"quantity\" name=\"quantity\" min={1} max={5} />\n                                            </form>\n                                        </td>\n                                        <td>\n                                            {result.description}\n                                        </td>\n                                        <td>\n                                            <button onClick={deleteCartItem(result._id)} >Del-tete-this</button>\n                                        </td>\n                                        <td>\n                                            <button onClick={submitOrder(result)} >GIMME MY SHIT</button>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}